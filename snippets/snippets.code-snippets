{
    "Basic Express Server": {
        "prefix": "!expressserver",
        "body": [
            "const express = require('express');",
    "const app = express();",
    "const port = 3000;",
    "",
    "app.get('/', (req, res) => {",
    "  res.send('Hello, World!');",
    "});",
    "",
    "app.listen(port, () => {",
    "  console.log(`Server running at http://localhost:${port}`);",
    "});"
        ],
        "description": "Basic express server"
    },

    "Dropdown": {
        "prefix": "!dropdown",
        "body": [
    "// [",
    "//     {",
    "//       \"name\": \"T-Shirt\",",
    "//       \"category\": \"fashion\"",
    "//     },",
    "//     {",
    "//       \"name\": \"Jeans\",",
    "//       \"category\": \"fashion\"",
    "//     },",
    "//     {",
    "//       \"name\": \"Sneakers\",",
    "//       \"category\": \"fashion\"",
    "//     },",
    "//     {",
    "//       \"name\": \"Smartphone\",",
    "//       \"category\": \"electronics\"",
    "//     },",
    "//     {",
    "//       \"name\": \"Headphones\",",
    "//       \"category\": \"electronics\"",
    "//     }",
    "// ]",
    "",
    "// <!DOCTYPE html>",
    "// <html lang=\"en\">",
    "// <head>",
    "//   <meta charset=\"UTF-8\">",
    "//   <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
    "//   <title>Product Filter</title>",
    "// </head>",
    "// <body>",
    "//   <label for=\"category\">Choose a category:</label>",
    "//   <select id=\"category\">",
    "//     <option value=\"all\">All</option>",
    "//     <option value=\"fashion\">Fashion</option>",
    "//     <option value=\"electronics\">Electronics</option>",
    "//   </select>",
    "",
    "//   <table border=\"1\">",
    "//     <thead>",
    "//       <tr>",
    "//         <th>Product Name</th>",
    "//         <th>Category</th>",
    "//       </tr>",
    "//     </thead>",
    "//     <tbody id=\"productTable\">",
    "//       <!-- Data will be dynamically injected here -->",
    "//     </tbody>",
    "//   </table>",
    "",
    "//   <script src=\"app.js\"></script>",
    "// </body>",
    "// </html>",
    "",
    "",
    "document.addEventListener('DOMContentLoaded', () => {",
    "    const categoryDropdown = document.getElementById('category');",
    "    const productTable = document.getElementById('productTable');",
    "",
    "    // Fetch the data from the products.json file",
    "    fetch('products.json')",
    "      .then(response => response.json())",
    "      .then(data => {",
    "        // Display all products on initial load",
    "        displayProducts(data);",
    "",
    "        // Listen for dropdown selection change",
    "        categoryDropdown.addEventListener('change', () => {",
    "          const selectedCategory = categoryDropdown.value;",
    "          if (selectedCategory === 'all') {",
    "            displayProducts(data);",
    "          } else {",
    "            const filteredProducts = data.filter(product => product.category === selectedCategory);",
    "            displayProducts(filteredProducts);",
    "          }",
    "        });",
    "      });",
    "",
    "    // Function to display products in the table",
    "    function displayProducts(products) {",
    "      productTable.innerHTML = ''; // Clear previous rows",
    "      products.forEach(product => {",
    "        const row = document.createElement('tr');",
    "        row.innerHTML = `",
    "          <td>${product.name}</td>",
    "          <td>${product.category}</td>",
    "        `;",
    "        productTable.appendChild(row);",
    "      });",
    "    }",
    "  });"
  ],
        "description": "dropdown"
    },

    "Row Color Change": {
        "prefix": "!rowcolorchange",
        "body": [
    "// [",
    "//   {",
    "//     name: \"John\",",
    "//     country: \"USA\",",
    "//     isselected: false,",
    "//   },",
    "//   {",
    "//     name: \"Alex\",",
    "//     country: \"Canada\",",
    "//     isselected: false,",
    "//   },",
    "//   {",
    "//     name: \"Maria\",",
    "//     country: \"Spain\",",
    "//     isselected: false,",
    "//   },",
    "// ];",
    "",
    "// <!DOCTYPE html>",
    "// <html lang=\"en\">",
    "// <head>",
    "//     <meta charset=\"UTF-8\">",
    "//     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
    "//     <title>Document</title>",
    "//     <style>",
    "//         table{",
    "//             width: 100%;",
    "//             border-collapse: collapse;",
    "//         }",
    "//         th, td {",
    "//             padding: 10px;",
    "//             text-align: left;",
    "//             border: 1px solid black;",
    "//         }",
    "//         tr.selected {",
    "//             background-color: green;",
    "//             color: white;",
    "//         }",
    "//         tr.unselected {",
    "//             background-color: white;",
    "//         }",
    "//     </style>",
    "// </head>",
    "// <body>",
    "//     <h2>Player List</h2>",
    "//     <table id=\"playerTable\">",
    "//         <thead>",
    "//             <tr>",
    "//                 <th>Name</th>",
    "//                 <th>Country</th>",
    "//             </tr>",
    "//             <tbody id=\"playersBody\">",
    "//                 <!-- Player rows will be dynamically inserted here -->",
    "//             </tbody>",
    "//         </thead>",
    "//     </table>",
    "",
    "//     <p id=\"selectedCount\">Selected Player: 0</p>",
    "",
    "//     <script src=\"script.js\"></script>",
    "// </body>",
    "// </html>",
    "",
    "",
    "// Fetch players data from players.json",
    "let players = [];",
    "fetch('players.json')",
    ".then(response => response.json())",
    ".then(data => {",
    "    players = data;",
    "    displayPlayers(players);",
    "});",
    "",
    "// Function to display players in the table",
    "function displayPlayers(players) {",
    "    const playersBody = document.getElementById('playersBody');",
    "    playersBody.innerHTML = ''; // Clear the table body first",
    "",
    "    players.forEach((player, index) => {",
    "        const row = document.createElement('tr');",
    "        row.classList.add(player.isselected ? 'selected' : 'unselected');",
    "",
    "        row.innerHTML = `",
    "        <td>${player.name}</td>",
    "        <td>${player.country}</td>",
    "        `;",
    "",
    "        // Add click event listener for row",
    "        row.addEventListener('click', () => {",
    "            toggleSelection(index);",
    "        });",
    "",
    "        playersBody.appendChild(row);",
    "    });",
    "",
    "    updateSelectedCount();",
    "}",
    "",
    "    // Function to toggle selection of a player",
    "    function toggleSelection(index) {",
    "        players[index].isselected = !players[index].isselected;",
    "        displayPlayers(players); // Update the table display",
    "    }",
    "",
    "    // Function to update the selected players count",
    "    function updateSelectedCount() {",
    "        const selectedCount = players.filter(player => player.isselected).length;",
    "        document.getElementById('selectedCount').innerText = `Selected Players: ${selectedCount}`;",
    "    }"
  ],
        "description": "rowcolorchange"
    },

    "Issued Books": {
        "prefix": "!issuedbooks",
        "body": [
    "// [",
    "//     {",
    "//       \"title\": \"The Great Gatsby\",",
    "//       \"author\": \"F. Scott Fitzgerald\",",
    "//       \"year\": 1925,",
    "//       \"issued\": true",
    "//     },",
    "//     {",
    "//       \"title\": \"To Kill a Mockingbird\",",
    "//       \"author\": \"Harper Lee\",",
    "//       \"year\": 1960,",
    "//       \"issued\": false",
    "//     },",
    "//     {",
    "//       \"title\": \"1984\",",
    "//       \"author\": \"George Orwell\",",
    "//       \"year\": 1949,",
    "//       \"issued\": true",
    "//     },",
    "//     {",
    "//       \"title\": \"Pride and Prejudice\",",
    "//       \"author\": \"Jane Austen\",",
    "//       \"year\": 1813,",
    "//       \"issued\": false",
    "//     },",
    "//     {",
    "//       \"title\": \"Moby-Dick\",",
    "//       \"author\": \"Herman Melville\",",
    "//       \"year\": 1851,",
    "//       \"issued\": true",
    "//     }",
    "// ]",
    "",
    "",
    "<!DOCTYPE html>",
    "<html lang=\"en\">",
    "<head>",
    "  <meta charset=\"UTF-8\">",
    "  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
    "  <style>",
    "    table {",
    "      width: 100%;",
    "      border-collapse: collapse;",
    "    }",
    "    table, th, td {",
    "      border: 1px solid black;",
    "    }",
    "    th, td {",
    "      padding: 10px;",
    "      text-align: left;",
    "    }",
    "    .issued {",
    "      background-color: red;",
    "      color: white;",
    "    }",
    "  </style>",
    "  <title>Book List</title>",
    "</head>",
    "<body>",
    "",
    "  <table>",
    "    <thead>",
    "      <tr>",
    "        <th>Title</th>",
    "        <th>Author</th>",
    "        <th>Year</th>",
    "        <th>Issued</th>",
    "      </tr>",
    "    </thead>",
    "    <tbody id=\"book-table-body\">",
    "      <!-- Rows will be added here by JavaScript -->",
    "    </tbody>",
    "  </table>",
    "",
    "  <script>",
    "    // Fetch and display books",
    "    fetch('books.json')",
    "      .then(response => response.json())",
    "      .then(data => displayBooks(data))",
    "      .catch(error => console.error('Error fetching the data:', error));",
    "",
    "    // Function to display books in the DOM",
    "    function displayBooks(books) {",
    "      const tableBody = document.getElementById('book-table-body');",
    "      books.forEach(book => {",
    "        const row = document.createElement('tr');",
    "",
    "        if (book.issued) {",
    "          row.classList.add('issued');",
    "        }",
    "",
    "        row.innerHTML = `",
    "          <td>${book.title}</td>",
    "          <td>${book.author}</td>",
    "          <td>${book.year}</td>",
    "          <td>${book.issued ? 'Yes' : 'No'}</td>",
    "        `;",
    "        tableBody.appendChild(row);",
    "      });",
    "    }",
    "  </script>",
    "",
    "</body>",
    "</html>"
  ],
        "description": "issuedbooks"
    },



    "HTTP": {
        "prefix": "!http",
        "body": [
    "const http = require('http');",
    "const fs = require('fs');",
    "const path = require('path');",
    "",
    "const PORT = 3000;",
    "",
    "// MIME types for serving different file types",
    "const mimeTypes = {",
    "  '.html': 'text/html',",
    "  '.css': 'text/css',",
    "  '.js': 'application/javascript',",
    "  '.png': 'image/png'",
    "};",
    "",
    "// Create HTTP server",
    "const server = http.createServer((req, res) => {",
    "  // Set file path",
    "  let filePath = path.join(__dirname, 'public', req.url === '/' ? 'index.html' : req.url);",
    "",
    "  // Get the file extension",
    "  const extname = path.extname(filePath);",
    "",
    "  // Default to HTML if no extension is found",
    "  const contentType = mimeTypes[extname] || 'text/html';",
    "",
    "  // Read the file and serve it",
    "  fs.readFile(filePath, (err, content) => {",
    "    if (err) {",
    "      if (err.code === 'ENOENT') {",
    "        res.writeHead(404, { 'Content-Type': 'text/html' });",
    "        res.end('<h1>404 - Page Not Found</h1>', 'utf-8');",
    "      } else {",
    "        res.writeHead(500);",
    "        res.end(`Server Error: ${err.code}`);",
    "      }",
    "    } else {",
    "      res.writeHead(200, { 'Content-Type': contentType });",
    "      res.end(content, 'utf-8');",
    "    }",
    "  });",
    "});",
    "",
    "// Listen on port",
    "server.listen(PORT, () => {",
    "  console.log(`Server running at http://localhost:${PORT}/`);",
    "});",
    "",
    "",
    "// /static-site",
    "// ├── server.js",
    "// ├── public",
    "//     ├── index.html",
    "//     ├── style.css",
    "//     ├── script.js",
    "//     ├── image.png",
    "",
    "//     <!DOCTYPE html>",
    "//     <html lang=\"en\">",
    "//     <head>",
    "//       <meta charset=\"UTF-8\">",
    "//       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
    "//       <title>Static Site Example</title>",
    "//       <link rel=\"stylesheet\" href=\"style.css\">",
    "//     </head>",
    "//     <body>",
    "//       <h1>Welcome to My Static Website</h1>",
    "//       <p>This is a basic static HTML website with CSS and JavaScript.</p>",
    "",
    "//       <img src=\"image.png\" alt=\"Example Image\" width=\"200px\">",
    "",
    "//       <button id=\"clickMe\">Click Me</button>",
    "",
    "//       <script src=\"script.js\"></script>",
    "//     </body>",
    "//     </html>",
    "",
    "",
    "",
    "",
    "//     body {",
    "//   font-family: Arial, sans-serif;",
    "//   background-color: #f0f0f0;",
    "//   text-align: center;",
    "//   margin-top: 50px;",
    "// }",
    "",
    "// h1 {",
    "//   color: #333;",
    "// }",
    "",
    "// button {",
    "//   padding: 10px 20px;",
    "//   font-size: 16px;",
    "//   cursor: pointer;",
    "//   background-color: #007bff;",
    "//   color: white;",
    "//   border: none;",
    "//   border-radius: 5px;",
    "// }",
    "",
    "// button:hover {",
    "//   background-color: #0056b3;",
    "// }",
    "",
    "",
    "",
    "// document.getElementById('clickMe').addEventListener('click', function() {",
    "//   alert('Button clicked!');",
    "// });"
  ],
        "description": "http"
    },


    "Basic HTTP Server": {
        "prefix": "",
        "body": [
            
        ],
        "description": ""
    },
}

