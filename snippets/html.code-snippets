{
    "Basic Express Server": {
        "prefix": "!_hiBro",
        "body": [
            "How is it going"
        ],
        "description": "Basic html"
    },
    

    

    "5-mark": {
        "prefix": "##5-mark",
        "body": [
  "//main.jsx",
  "import { StrictMode } from 'react'",
  "import { createRoot } from 'react-dom/client'",
  "import './index.css'",
  "import App from './App.jsx'",
  "import { ThemeProvider } from './ThemeContext';",
  "",
  "createRoot(document.getElementById('root')).render(",
  "  <StrictMode>",
  "  <ThemeProvider>",
  "    <App />",
  "  </ThemeProvider>",
  "</StrictMode>",
  ")",
  "",
  "// App.jsx",
  "import React from 'react';",
  "import { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';",
  "import InputComponent from './InputComponent';",
  "import JokeComponent from './JokeComponent';",
  "import { useTheme } from './ThemeContext';",
  "",
  "function Home() {",
  "  return (",
  "    <div className=\"space-y-6\">",
  "      <h2 className=\"text-2xl font-bold\">Home Page</h2>",
  "      <InputComponent />",
  "      <JokeComponent />",
  "    </div>",
  "  );",
  "}",
  "",
  "function About() {",
  "  return <h2 className=\"text-2xl font-bold\">About Page</h2>;",
  "}",
  "",
  "export default function App() {",
  "  const { toggleTheme, theme } = useTheme();",
  "",
  "  return (",
  "    <Router>",
  "      <div className=\"p-4 max-w-3xl mx-auto\">",
  "        <nav className=\"flex items-center justify-between mb-6 border-b pb-4\">",
  "          <div className=\"space-x-4\">",
  "            <Link",
  "              to=\"/home\"",
  "              className=\"text-blue-500 hover:underline font-medium\"",
  "            >",
  "              Home",
  "            </Link>",
  "            <Link",
  "              to=\"/about\"",
  "              className=\"text-blue-500 hover:underline font-medium\"",
  "            >",
  "              About",
  "            </Link>",
  "          </div>",
  "          <button",
  "            onClick={toggleTheme}",
  "            className=\"px-3 py-1 rounded-md bg-blue-600 text-white hover:bg-blue-700 transition\"",
  "          >",
  "            Toggle {theme === 'light' ? 'Dark' : 'Light'}",
  "          </button>",
  "        </nav>",
  "",
  "        <Routes>",
  "          <Route path=\"/home\" element={<Home />} />",
  "          <Route path=\"/about\" element={<About />} />",
  "        </Routes>",
  "      </div>",
  "    </Router>",
  "  );",
  "}",
  "",
  "// JokeComponent.jsx",
  "import React, { useEffect, useState } from 'react';",
  "",
  "export default function JokeComponent() {",
  "  const [joke, setJoke] = useState(null);",
  "",
  "  useEffect(() => {",
  "    fetch('https://official-joke-api.appspot.com/random_joke')",
  "      .then((res) => res.json())",
  "      .then((data) => setJoke(data));",
  "  }, []);",
  "",
  "  return (",
  "    <div>",
  "      <h2>Random Joke</h2>",
  "      {joke ? (",
  "        <p>",
  "          {joke.setup} - {joke.punchline}",
  "        </p>",
  "      ) : (",
  "        <p>Loading...</p>",
  "      )}",
  "    </div>",
  "  );",
  "}",
  "",
  "// ThemeContext.js",
  "import { createContext, useState, useContext } from 'react';",
  "",
  "const ThemeContext = createContext();",
  "",
  "export const useTheme = () => useContext(ThemeContext);",
  "",
  "export function ThemeProvider({ children }) {",
  "  const [theme, setTheme] = useState('light');",
  "  const toggleTheme = () => setTheme((prev) => (prev === 'light' ? 'dark' : 'light'));",
  "",
  "  return (",
  "    <ThemeContext.Provider value={{ theme, toggleTheme }}>",
  "      <div style={{ background: theme === 'dark' ? '#333' : '#fff', color: theme === 'dark' ? '#fff' : '#000', minHeight: '100vh' }}>",
  "        {children}",
  "      </div>",
  "    </ThemeContext.Provider>",
  "  );",
  "}",
  "",
  "// InputComponent.jsx",
  "import React, { useState } from 'react';",
  "",
  "export default function InputComponent() {",
  "  const [input, setInput] = useState('');",
  "",
  "  return (",
  "    <div>",
  "      <input",
  "        type=\"text\"",
  "        placeholder=\"Type something...\"",
  "        value={input}",
  "        onChange={(e) => setInput(e.target.value)}",
  "      />",
  "      <p>You typed: {input}</p>",
  "    </div>",
  "  );",
  "}"
],
"description": "##5-mark"
    }
}

